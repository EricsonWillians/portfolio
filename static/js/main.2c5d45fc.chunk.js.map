{"version":3,"sources":["Synth/keyTable.js","Synth/index.js","Synth/components/KnobWrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["keyTable","C3","D3","E3","F3","G3","A3","B3","C4","D4","E4","F4","G4","A4","B4","C5","Synth","duration","useState","naturalNotes","sharpNotes","Tone","PolySynth","oscillator","type","toMaster","className","map","note","NaturalNote","SharpNote","triggered","setTriggered","useEffect","document","addEventListener","event","keyCode","triggerAttack","triggerRelease","onMouseDown","onMouseUp","releaseAll","triggerAttackRelease","KnobWrapper","title","value","setValue","onChange","_value","min","max","createGlobalStyle","reset","Boolean","window","location","hostname","match","ReactDOM","render","setDuration","theme","themes","default","style","justifyContent","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uUAAaA,G,MAAW,CACtBC,GAAI,GACJ,MAAO,GACPC,GAAI,GACJ,MAAO,GACPC,GAAI,GACJC,GAAI,GACJ,MAAO,GACPC,GAAI,GACJ,MAAO,GACPC,GAAI,GACJ,MAAO,GACPC,GAAI,GACJC,GAAI,GACJ,MAAO,GACPC,GAAI,GACJ,MAAO,GACPC,GAAI,IACJC,GAAI,IACJ,MAAO,IACPC,GAAI,IACJ,MAAO,GACPC,GAAI,EACJ,MAAO,EACPC,GAAI,EACJC,GAAI,ICpBS,SAASC,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAAY,EACFC,mBAAS,CAC/C,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAhBwC,mBACnCC,EADmC,aAmBND,mBAAS,CAC3C,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SA7BwC,mBAmBnCE,EAnBmC,aAgCNF,mBAClC,IAAIG,IAAKC,UAAU,GAAID,IAAKL,MAAO,CACjCO,WAAY,CACVC,KAAM,cAEPC,aArCqC,mBAgCnCF,EAhCmC,UAwC1C,OACE,yBAAKG,UAAU,SACb,yBAAKA,UAAU,yBACZP,EAAaQ,KAAI,SAAAC,GAChB,OACE,kBAACC,EAAD,CACED,KAAMA,EACNX,SAAUA,EACVM,WAAYA,OAIlB,yBAAKG,UAAU,uBACZN,EAAWO,KAAI,SAAAC,GACd,OACE,kBAACE,EAAD,CACEF,KAAMA,EACNX,SAAUA,EACVM,WAAYA,UAUrB,SAASM,EAAT,GAAsD,IAA/BD,EAA8B,EAA9BA,KAAgBL,GAAc,EAAxBN,SAAwB,EAAdM,YAAc,EACxBL,oBAAS,GADe,mBACnDa,EADmD,KACxCC,EADwC,KA2B1D,OAzBAC,qBAAU,WACRC,SAASC,iBACP,WACA,SAAAC,IACoB,IAAdL,GACEK,EAAMC,UAAYrC,EAAS4B,IAC7BI,GAAa,MAInB,GAEFE,SAASC,iBAAiB,SAAS,SAAAC,GAC7BA,EAAMC,UAAYrC,EAAS4B,IAC7BI,GAAa,QAGhB,IAECD,EACFR,EAAWe,cAAcV,IACF,IAAdG,GACTR,EAAWgB,eAAeX,GAI1B,yBACEF,UAAS,+BACHK,EACK,yBAEF,IAETS,YAAa,WACXjB,EAAWe,cAAcV,IAE3Ba,UAAW,WACTlB,EAAWmB,gBAMZ,SAASZ,EAAT,GAAoD,IAA/BF,EAA8B,EAA9BA,KAAMX,EAAwB,EAAxBA,SAAUM,EAAc,EAAdA,WAAc,EACtBL,oBAAS,GADa,mBACjDa,EADiD,KACtCC,EADsC,KA2BxD,OAzBAC,qBAAU,WACRC,SAASC,iBACP,WACA,SAAAC,IACoB,IAAdL,GACEK,EAAMC,UAAYrC,EAAS4B,IAC7BI,GAAa,MAInB,GAEFE,SAASC,iBAAiB,SAAS,SAAAC,GAC7BA,EAAMC,UAAYrC,EAAS4B,IAC7BI,GAAa,QAGhB,IAECD,EACFR,EAAWe,cAAcV,IACF,IAAdG,GACTR,EAAWgB,eAAeX,GAI1B,yBACEF,UAAS,6BAEI,QAATE,GACS,QAATA,GACS,QAATA,GACS,QAATA,EAEO,gCAEF,GATA,YAWHG,EACK,yBAEF,IAETS,YAAa,WACXjB,EAAWoB,qBAAqBf,EAAMX,IAExCwB,UAAW,WACTlB,EAAWmB,gB,kBCnKJ,SAASE,EAAT,GAAiC,IAAVC,EAAS,EAATA,MAAS,EACnB3B,mBAAS,GADU,mBACtC4B,EADsC,KAC/BC,EAD+B,KAE7C,OACE,yBAAKrB,UAAU,gBACb,kBAAC,OAAD,CAAMsB,SAAU,SAACC,GACbF,EAASE,IACVC,IAAK,EAAGC,IAAK,EAAGL,MAAOA,IAC1B,2BAAID,EAAJ,IAAYC,I,8ECJEM,4BAAH,IACbC,SCIgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBFKD,WAAgB,IAAD,EAEI1C,mBAAS,GAFb,mBAErBD,EAFqB,KAEX4C,EAFW,KAI5B,OACE,kBAAC,gBAAD,CAAeC,MAAOC,SAAOC,SAC3B,kBAAC,SAAD,KACE,kBAAC,UAAD,CAASC,MAAO,CAAEC,eAAgB,iBAChC,kBAAC,EAAD,CAAarB,MAAM,WAAWG,SAAU,SAACF,GACvCe,EAAYf,QAIlB,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,aAAb,mBACA,kBAAC,EAAD,CAAOT,SAAUA,SErBX,MAASiB,SAASiC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2c5d45fc.chunk.js","sourcesContent":["export const keyTable = {\r\n  C3: 65,\r\n  \"C#3\": 87,\r\n  D3: 83,\r\n  \"D#3\": 69,\r\n  E3: 68,\r\n  F3: 70,\r\n  \"F#3\": 84,\r\n  G3: 71,\r\n  \"G#3\": 89,\r\n  A3: 72,\r\n  \"A#3\": 85,\r\n  B3: 74,\r\n  C4: 75,\r\n  \"C#4\": 79,\r\n  D4: 76,\r\n  \"D#4\": 80,\r\n  E4: 186,\r\n  F4: 222,\r\n  \"F#4\": 221,\r\n  G4: 220,\r\n  \"G#4\": 13,\r\n  A4: 0,\r\n  \"A#4\": 0,\r\n  B4: 0,\r\n  C5: 0\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tone from \"tone\";\r\nimport \"./index.scss\";\r\nimport { keyTable } from \"./keyTable\";\r\n\r\nexport default function Synth({ duration }) {\r\n  const [naturalNotes, setNaturalNotes] = useState([\r\n    \"C3\",\r\n    \"D3\",\r\n    \"E3\",\r\n    \"F3\",\r\n    \"G3\",\r\n    \"A3\",\r\n    \"B3\",\r\n    \"C4\",\r\n    \"D4\",\r\n    \"E4\",\r\n    \"F4\",\r\n    \"G4\",\r\n    \"A4\",\r\n    \"B4\",\r\n    \"C5\"\r\n  ]);\r\n\r\n  const [sharpNotes, setSharpNotes] = useState([\r\n    \"C#3\",\r\n    \"D#3\",\r\n    \"F#3\",\r\n    \"G#3\",\r\n    \"A#3\",\r\n    \"C#4\",\r\n    \"D#4\",\r\n    \"F#4\",\r\n    \"G#4\",\r\n    \"A#4\"\r\n  ]);\r\n\r\n  const [oscillator, setOscillator] = useState(\r\n    new Tone.PolySynth(16, Tone.Synth, {\r\n      oscillator: {\r\n        type: \"triangle\"\r\n      }\r\n    }).toMaster()\r\n  );\r\n\r\n  return (\r\n    <div className=\"synth\">\r\n      <div className=\"synth__natural__notes\">\r\n        {naturalNotes.map(note => {\r\n          return (\r\n            <NaturalNote\r\n              note={note}\r\n              duration={duration}\r\n              oscillator={oscillator}\r\n            />\r\n          );\r\n        })}\r\n        <div className=\"synth__sharp__notes\">\r\n          {sharpNotes.map(note => {\r\n            return (\r\n              <SharpNote\r\n                note={note}\r\n                duration={duration}\r\n                oscillator={oscillator}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function NaturalNote({ note, duration, oscillator }) {\r\n  const [triggered, setTriggered] = useState(false);\r\n  useEffect(() => {\r\n    document.addEventListener(\r\n      \"keydown\",\r\n      event => {\r\n        if (triggered === false) {\r\n          if (event.keyCode === keyTable[note]) {\r\n            setTriggered(true);\r\n          }\r\n        }\r\n      },\r\n      false\r\n    );\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.keyCode === keyTable[note]) {\r\n        setTriggered(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (triggered) {\r\n    oscillator.triggerAttack(note);\r\n  } else if (triggered === false) {\r\n    oscillator.triggerRelease(note);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`synth__natural__note ${(() => {\r\n        if (triggered) {\r\n          return \"synth__note--triggered\";\r\n        }\r\n        return \"\";\r\n      })()}`}\r\n      onMouseDown={() => {\r\n        oscillator.triggerAttack(note);\r\n      }}\r\n      onMouseUp={() => {\r\n        oscillator.releaseAll();\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport function SharpNote({ note, duration, oscillator }) {\r\n  const [triggered, setTriggered] = useState(false);\r\n  useEffect(() => {\r\n    document.addEventListener(\r\n      \"keydown\",\r\n      event => {\r\n        if (triggered === false) {\r\n          if (event.keyCode === keyTable[note]) {\r\n            setTriggered(true);\r\n          }\r\n        }\r\n      },\r\n      false\r\n    );\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.keyCode === keyTable[note]) {\r\n        setTriggered(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (triggered) {\r\n    oscillator.triggerAttack(note);\r\n  } else if (triggered === false) {\r\n    oscillator.triggerRelease(note);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`synth__sharp__note ${(() => {\r\n        if (\r\n          note === \"D#3\" ||\r\n          note === \"A#3\" ||\r\n          note === \"D#4\" ||\r\n          note === \"A#4\"\r\n        ) {\r\n          return \"synth__sharp__note--separator\";\r\n        }\r\n        return \"\";\r\n      })()} ${(() => {\r\n        if (triggered) {\r\n          return \"synth__note--triggered\";\r\n        }\r\n        return \"\";\r\n      })()}`}\r\n      onMouseDown={() => {\r\n        oscillator.triggerAttackRelease(note, duration);\r\n      }}\r\n      onMouseUp={() => {\r\n        oscillator.releaseAll();\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Knob } from \"react-rotary-knob\";\r\nimport \"./index.scss\";\r\n\r\nexport default function KnobWrapper({ title }) {\r\n  const [value, setValue] = useState(0);\r\n  return (\r\n    <div className=\"knob-wrapper\">\r\n      <Knob onChange={(_value) => {\r\n          setValue(_value);\r\n      }} min={0} max={5} value={value} />\r\n      <p>{title} {value}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./assets/style/main.scss\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport { reset, AppBar, Toolbar, Menu, themes } from \"react95\";\r\nimport Synth from \"./Synth\";\r\nimport KnobWrapper from \"./Synth/components/KnobWrapper\";\r\n\r\nconst ResetStyles = createGlobalStyle`\r\n  ${reset}\r\n`;\r\n\r\nexport default function App() {\r\n\r\n  const [duration, setDuration] = useState(0);\r\n\r\n  return (\r\n    <ThemeProvider theme={themes.default}>\r\n      <AppBar>\r\n        <Toolbar style={{ justifyContent: \"space-evenly\" }}>\r\n          <KnobWrapper title=\"Duration\" onChange={(value) => {\r\n            setDuration(value);\r\n          }}/>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className=\"main\">\r\n        <div className=\"main-container\">\r\n          <p className=\"app-title\">Ericson's Synth</p>\r\n          <Synth duration={duration} />\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}